name: "Sync to two forks (SSH, autodetect default branch)"

on:
  push:
    branches: [ main ]
    tags: [ "*" ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  sync:
    if: github.repository == 'yqkiuo/BreastSubtypeR'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Start ssh-agent (persist env)
        run: |
          eval "$(ssh-agent -s)"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> "$GITHUB_ENV"
          echo "SSH_AGENT_PID=$SSH_AGENT_PID"   >> "$GITHUB_ENV"

      - name: Ensure secrets exist
        run: |
          [ -n "${{ secrets.MIRROR_DEPLOY_KEY }}" ] || { echo "::error:: Secret MIRROR_DEPLOY_KEY missing (org fork)"; exit 1; }
          [ -n "${{ secrets.MIRROR_DEPLOY_KEY_2_SIFAKISE }}" ] || { echo "::error:: Secret MIRROR_DEPLOY_KEY_2_SIFAKISE missing (user fork)"; exit 1; }

      - name: Write & validate org private key
        run: |
          printf '%s' "${{ secrets.MIRROR_DEPLOY_KEY }}" | tr -d '\r' > /tmp/key_org
          chmod 600 /tmp/key_org
          grep -q "BEGIN OPENSSH PRIVATE KEY" /tmp/key_org || { echo "::error:: MIRROR_DEPLOY_KEY is not an OpenSSH private key"; exit 1; }
          ssh-keygen -y -f /tmp/key_org >/dev/null 2>&1 || { echo "::error:: MIRROR_DEPLOY_KEY unreadable (passphrase or invalid)"; exit 1; }
          ssh-add /tmp/key_org

      - name: Write & validate user private key
        run: |
          printf '%s' "${{ secrets.MIRROR_DEPLOY_KEY_2_SIFAKISE }}" | tr -d '\r' > /tmp/key_user
          chmod 600 /tmp/key_user
          grep -q "BEGIN OPENSSH PRIVATE KEY" /tmp/key_user || { echo "::error:: MIRROR_DEPLOY_KEY_2_SIFAKISE is not an OpenSSH private key"; exit 1; }
          ssh-keygen -y -f /tmp/key_user >/dev/null 2>&1 || { echo "::error:: MIRROR_DEPLOY_KEY_2_SIFAKISE unreadable (passphrase or invalid)"; exit 1; }
          ssh-add /tmp/key_user

      - name: Add GitHub to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts

      - name: Configure git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add remotes
        run: |
          git remote add mirror_org  git@github.com:JohanHartmanGroupBioteam/BreastSubtypeR.git
          git remote add mirror_user git@github.com:sifakise/BreastSubtypeR.git
          git remote -v

      - name: Detect default branches on forks
        id: detect
        run: |
          # Get default branch via HEAD symref
          ORG_DEF=$(git ls-remote --symref mirror_org HEAD | awk '/^ref:/ {print $2}' | sed 's@refs/heads/@@')
          USER_DEF=$(git ls-remote --symref mirror_user HEAD | awk '/^ref:/ {print $2}' | sed 's@refs/heads/@@')
          echo "Org fork default branch:   $ORG_DEF"
          echo "User fork default branch:  $USER_DEF"
          # Fallbacks if detection fails
          [ -n "$ORG_DEF" ]  || ORG_DEF=main
          [ -n "$USER_DEF" ] || USER_DEF=main
          echo "ORG_DEF=$ORG_DEF"   >> "$GITHUB_OUTPUT"
          echo "USER_DEF=$USER_DEF" >> "$GITHUB_OUTPUT"

      - name: Push to org fork (main + tags)
        run: |
          set -e
          git push -v mirror_org  HEAD:refs/heads/${{ steps.detect.outputs.ORG_DEF }}
          git push -v mirror_org  --tags

      - name: Push to user fork (main + tags)
        run: |
          set -e
          git push -v mirror_user HEAD:refs/heads/${{ steps.detect.outputs.USER_DEF }}
          git push -v mirror_user --tags
